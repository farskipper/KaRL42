// Generated automatically by nearley
// http://github.com/Hardmath123/nearley
(function () {
function id(x) {return x[0]; }
var grammar = {
    ParserRules: [
    {"name": "main", "symbols": ["ruleset"]},
    {"name": "ruleset_list", "symbols": ["ruleset"]},
    {"name": "ruleset_list", "symbols": ["ruleset_list", "_", {"literal":";"}, "_", "ruleset"]},
    {"name": "ruleset$string$1", "symbols": [{"literal":"r"}, {"literal":"u"}, {"literal":"l"}, {"literal":"e"}, {"literal":"s"}, {"literal":"e"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "ruleset$string$2", "symbols": [{"literal":"m"}, {"literal":"e"}, {"literal":"t"}, {"literal":"a"}, {"literal":"{"}, {"literal":"a"}, {"literal":"u"}, {"literal":"t"}, {"literal":"h"}, {"literal":"o"}, {"literal":"r"}, {"literal":" "}, {"literal":"\""}, {"literal":"K"}, {"literal":"a"}, {"literal":"R"}, {"literal":"L"}, {"literal":"4"}, {"literal":"2"}, {"literal":"\""}, {"literal":"}"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "ruleset$ebnf$1$subexpression$1$string$1", "symbols": [{"literal":"g"}, {"literal":"l"}, {"literal":"o"}, {"literal":"b"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "ruleset$ebnf$1$subexpression$1", "symbols": ["ruleset$ebnf$1$subexpression$1$string$1", "_", "declaration_block", "_"]},
    {"name": "ruleset$ebnf$1", "symbols": ["ruleset$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "ruleset$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "ruleset$ebnf$2$subexpression$1", "symbols": ["rule", "_"]},
    {"name": "ruleset$ebnf$2", "symbols": ["ruleset$ebnf$2$subexpression$1"]},
    {"name": "ruleset$ebnf$2$subexpression$2", "symbols": ["rule", "_"]},
    {"name": "ruleset$ebnf$2", "symbols": ["ruleset$ebnf$2$subexpression$2", "ruleset$ebnf$2"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "ruleset", "symbols": ["ruleset$string$1", "__", "Identifier", "_", {"literal":"{"}, "_", "ruleset$string$2", "_", "ruleset$ebnf$1", "ruleset$ebnf$2", "loc_close_curly"]},
    {"name": "ruleset_meta_block", "symbols": [{"literal":"{"}, "_", {"literal":"}"}]},
    {"name": "ruleset_meta_block", "symbols": [{"literal":"{"}, "_", "ruleset_meta_prop_list", "_", {"literal":"}"}]},
    {"name": "ruleset_meta_prop_list", "symbols": ["ruleset_meta_prop"]},
    {"name": "ruleset_meta_prop_list", "symbols": ["ruleset_meta_prop_list", "__", "ruleset_meta_prop"]},
    {"name": "ruleset_meta_prop", "symbols": ["Keyword", "__", "Expression"]},
    {"name": "Keyword$ebnf$1", "symbols": []},
    {"name": "Keyword$ebnf$1", "symbols": [/[a-zA-Z0-9_$]/, "Keyword$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "Keyword", "symbols": [/[a-zA-Z_$]/, "Keyword$ebnf$1"]},
    {"name": "rule$string$1", "symbols": [{"literal":"r"}, {"literal":"u"}, {"literal":"l"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "rule$ebnf$1$subexpression$1$string$1", "symbols": [{"literal":"i"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "rule$ebnf$1$subexpression$1", "symbols": ["__", "rule$ebnf$1$subexpression$1$string$1", "__", "rule_state"]},
    {"name": "rule$ebnf$1", "symbols": ["rule$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "rule$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "rule$ebnf$2$subexpression$1", "symbols": ["RuleSelect", "_semi"]},
    {"name": "rule$ebnf$2", "symbols": ["rule$ebnf$2$subexpression$1"], "postprocess": id},
    {"name": "rule$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "rule", "symbols": ["rule$string$1", "__", "Identifier", "rule$ebnf$1", "_", {"literal":"{"}, "_", "rule$ebnf$2", "RuleBody", "loc_close_curly"]},
    {"name": "rule_state$string$1", "symbols": [{"literal":"a"}, {"literal":"c"}, {"literal":"t"}, {"literal":"i"}, {"literal":"v"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "rule_state", "symbols": ["rule_state$string$1"]},
    {"name": "rule_state$string$2", "symbols": [{"literal":"i"}, {"literal":"n"}, {"literal":"a"}, {"literal":"c"}, {"literal":"t"}, {"literal":"i"}, {"literal":"v"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "rule_state", "symbols": ["rule_state$string$2"]},
    {"name": "RuleBody", "symbols": []},
    {"name": "RuleBody", "symbols": ["RulePrelude", "_"]},
    {"name": "RuleBody", "symbols": ["RuleActionBlock", "_"]},
    {"name": "RuleBody", "symbols": ["RulePrelude", "_", "RuleActionBlock", "_"]},
    {"name": "RuleBody", "symbols": ["RulePostlude", "_"]},
    {"name": "RuleBody", "symbols": ["RulePrelude", "_", "RulePostlude", "_"]},
    {"name": "RuleBody", "symbols": ["RuleActionBlock", "__", "RulePostlude", "_"]},
    {"name": "RuleBody", "symbols": ["RulePrelude", "_", "RuleActionBlock", "__", "RulePostlude", "_"]},
    {"name": "RuleSelect$string$1", "symbols": [{"literal":"s"}, {"literal":"e"}, {"literal":"l"}, {"literal":"e"}, {"literal":"c"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RuleSelect$string$2", "symbols": [{"literal":"w"}, {"literal":"h"}, {"literal":"e"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RuleSelect", "symbols": ["RuleSelect$string$1", "__", "RuleSelect$string$2", "__", "EventExpression"]},
    {"name": "RulePrelude$string$1", "symbols": [{"literal":"p"}, {"literal":"r"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RulePrelude", "symbols": ["RulePrelude$string$1", "_", "declaration_block"]},
    {"name": "EventExpression", "symbols": ["event_exp_within"]},
    {"name": "event_exp_within", "symbols": ["event_exp_or"]},
    {"name": "event_exp_within$string$1", "symbols": [{"literal":"w"}, {"literal":"i"}, {"literal":"t"}, {"literal":"h"}, {"literal":"i"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_within", "symbols": ["event_exp_within", "__", "event_exp_within$string$1", "__", "PositiveInteger", "__", "time_period"]},
    {"name": "event_exp_or", "symbols": ["event_exp_and"]},
    {"name": "event_exp_or$string$1", "symbols": [{"literal":"o"}, {"literal":"r"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_or", "symbols": ["event_exp_or", "__", "event_exp_or$string$1", "__", "event_exp_and"]},
    {"name": "event_exp_and", "symbols": ["event_exp_infix_op"]},
    {"name": "event_exp_and$string$1", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_and", "symbols": ["event_exp_and", "__", "event_exp_and$string$1", "__", "event_exp_infix_op"]},
    {"name": "event_exp_infix_op", "symbols": ["event_exp_fns"]},
    {"name": "event_exp_infix_op$string$1", "symbols": [{"literal":"b"}, {"literal":"e"}, {"literal":"f"}, {"literal":"o"}, {"literal":"r"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_infix_op", "symbols": ["event_exp_infix_op", "__", "event_exp_infix_op$string$1", "__", "event_exp_fns"]},
    {"name": "event_exp_infix_op$string$2", "symbols": [{"literal":"t"}, {"literal":"h"}, {"literal":"e"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_infix_op", "symbols": ["event_exp_infix_op", "__", "event_exp_infix_op$string$2", "__", "event_exp_fns"]},
    {"name": "event_exp_infix_op$string$3", "symbols": [{"literal":"a"}, {"literal":"f"}, {"literal":"t"}, {"literal":"e"}, {"literal":"r"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_infix_op", "symbols": ["event_exp_infix_op", "__", "event_exp_infix_op$string$3", "__", "event_exp_fns"]},
    {"name": "event_exp_fns", "symbols": ["event_exp_base"]},
    {"name": "event_exp_fns$string$1", "symbols": [{"literal":"b"}, {"literal":"e"}, {"literal":"t"}, {"literal":"w"}, {"literal":"e"}, {"literal":"e"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_fns", "symbols": ["event_exp_fns", "__", "event_exp_fns$string$1", "_", {"literal":"("}, "_", "EventExpression", "_", {"literal":","}, "_", "EventExpression", "_", "loc_close_paren"]},
    {"name": "event_exp_fns$string$2", "symbols": [{"literal":"n"}, {"literal":"o"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_fns$string$3", "symbols": [{"literal":"b"}, {"literal":"e"}, {"literal":"t"}, {"literal":"w"}, {"literal":"e"}, {"literal":"e"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_fns", "symbols": ["event_exp_fns", "__", "event_exp_fns$string$2", "__", "event_exp_fns$string$3", "_", {"literal":"("}, "_", "EventExpression", "_", {"literal":","}, "_", "EventExpression", "_", "loc_close_paren"]},
    {"name": "event_exp_fns$string$4", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"y"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_fns", "symbols": ["event_exp_fns$string$4", "__", "PositiveInteger", "_", {"literal":"("}, "_", "EventExpression_list", "_", "loc_close_paren"]},
    {"name": "event_exp_fns$string$5", "symbols": [{"literal":"c"}, {"literal":"o"}, {"literal":"u"}, {"literal":"n"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_fns", "symbols": ["event_exp_fns$string$5", "__", "PositiveInteger", "_", {"literal":"("}, "_", "EventExpression", "_", "loc_close_paren"]},
    {"name": "event_exp_fns$string$6", "symbols": [{"literal":"r"}, {"literal":"e"}, {"literal":"p"}, {"literal":"e"}, {"literal":"a"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_fns", "symbols": ["event_exp_fns$string$6", "__", "PositiveInteger", "_", {"literal":"("}, "_", "EventExpression", "_", "loc_close_paren"]},
    {"name": "event_exp_fns$string$7", "symbols": [{"literal":"m"}, {"literal":"a"}, {"literal":"x"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_fns", "symbols": ["event_exp_fns", "__", "event_exp_fns$string$7", "_", {"literal":"("}, "_", "function_params", "_", "loc_close_paren"]},
    {"name": "event_exp_fns$string$8", "symbols": [{"literal":"m"}, {"literal":"i"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_fns", "symbols": ["event_exp_fns", "__", "event_exp_fns$string$8", "_", {"literal":"("}, "_", "function_params", "_", "loc_close_paren"]},
    {"name": "event_exp_fns$string$9", "symbols": [{"literal":"s"}, {"literal":"u"}, {"literal":"m"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_fns", "symbols": ["event_exp_fns", "__", "event_exp_fns$string$9", "_", {"literal":"("}, "_", "function_params", "_", "loc_close_paren"]},
    {"name": "event_exp_fns$string$10", "symbols": [{"literal":"a"}, {"literal":"v"}, {"literal":"g"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_fns", "symbols": ["event_exp_fns", "__", "event_exp_fns$string$10", "_", {"literal":"("}, "_", "function_params", "_", "loc_close_paren"]},
    {"name": "event_exp_fns$string$11", "symbols": [{"literal":"p"}, {"literal":"u"}, {"literal":"s"}, {"literal":"h"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_fns", "symbols": ["event_exp_fns", "__", "event_exp_fns$string$11", "_", {"literal":"("}, "_", "function_params", "_", "loc_close_paren"]},
    {"name": "event_exp_base", "symbols": [{"literal":"("}, "_", "EventExpression", "_", {"literal":")"}]},
    {"name": "event_exp_base$ebnf$1$subexpression$1", "symbols": ["__", "event_exp_attribute_pairs"]},
    {"name": "event_exp_base$ebnf$1", "symbols": ["event_exp_base$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "event_exp_base$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "event_exp_base$ebnf$2$subexpression$1$string$1", "symbols": [{"literal":"w"}, {"literal":"h"}, {"literal":"e"}, {"literal":"r"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_base$ebnf$2$subexpression$1", "symbols": ["__", "event_exp_base$ebnf$2$subexpression$1$string$1", "__", "Expression"]},
    {"name": "event_exp_base$ebnf$2", "symbols": ["event_exp_base$ebnf$2$subexpression$1"], "postprocess": id},
    {"name": "event_exp_base$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "event_exp_base$ebnf$3$subexpression$1$string$1", "symbols": [{"literal":"s"}, {"literal":"e"}, {"literal":"t"}, {"literal":"t"}, {"literal":"i"}, {"literal":"n"}, {"literal":"g"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "event_exp_base$ebnf$3$subexpression$1", "symbols": ["__", "event_exp_base$ebnf$3$subexpression$1$string$1", "_", {"literal":"("}, "_", "function_params", "_", "loc_close_paren"]},
    {"name": "event_exp_base$ebnf$3", "symbols": ["event_exp_base$ebnf$3$subexpression$1"], "postprocess": id},
    {"name": "event_exp_base$ebnf$3", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "event_exp_base", "symbols": ["Identifier", "__", "Identifier", "event_exp_base$ebnf$1", "event_exp_base$ebnf$2", "event_exp_base$ebnf$3"]},
    {"name": "event_exp_attribute_pairs", "symbols": ["event_exp_attribute_pair"]},
    {"name": "event_exp_attribute_pairs", "symbols": ["event_exp_attribute_pairs", "__", "event_exp_attribute_pair"]},
    {"name": "event_exp_attribute_pair", "symbols": ["Identifier", "__", "RegExp"]},
    {"name": "EventExpression_list", "symbols": ["EventExpression"]},
    {"name": "EventExpression_list", "symbols": ["EventExpression_list", "_", {"literal":","}, "_", "EventExpression"]},
    {"name": "time_period", "symbols": ["time_period_enum"]},
    {"name": "time_period_enum$string$1", "symbols": [{"literal":"y"}, {"literal":"e"}, {"literal":"a"}, {"literal":"r"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "time_period_enum", "symbols": ["time_period_enum$string$1"]},
    {"name": "time_period_enum$string$2", "symbols": [{"literal":"m"}, {"literal":"o"}, {"literal":"n"}, {"literal":"t"}, {"literal":"h"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "time_period_enum", "symbols": ["time_period_enum$string$2"]},
    {"name": "time_period_enum$string$3", "symbols": [{"literal":"w"}, {"literal":"e"}, {"literal":"e"}, {"literal":"k"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "time_period_enum", "symbols": ["time_period_enum$string$3"]},
    {"name": "time_period_enum$string$4", "symbols": [{"literal":"d"}, {"literal":"a"}, {"literal":"y"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "time_period_enum", "symbols": ["time_period_enum$string$4"]},
    {"name": "time_period_enum$string$5", "symbols": [{"literal":"h"}, {"literal":"o"}, {"literal":"u"}, {"literal":"r"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "time_period_enum", "symbols": ["time_period_enum$string$5"]},
    {"name": "time_period_enum$string$6", "symbols": [{"literal":"m"}, {"literal":"i"}, {"literal":"n"}, {"literal":"u"}, {"literal":"t"}, {"literal":"e"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "time_period_enum", "symbols": ["time_period_enum$string$6"]},
    {"name": "time_period_enum$string$7", "symbols": [{"literal":"s"}, {"literal":"e"}, {"literal":"c"}, {"literal":"o"}, {"literal":"n"}, {"literal":"d"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "time_period_enum", "symbols": ["time_period_enum$string$7"]},
    {"name": "time_period_enum$string$8", "symbols": [{"literal":"y"}, {"literal":"e"}, {"literal":"a"}, {"literal":"r"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "time_period_enum", "symbols": ["time_period_enum$string$8"]},
    {"name": "time_period_enum$string$9", "symbols": [{"literal":"m"}, {"literal":"o"}, {"literal":"n"}, {"literal":"t"}, {"literal":"h"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "time_period_enum", "symbols": ["time_period_enum$string$9"]},
    {"name": "time_period_enum$string$10", "symbols": [{"literal":"w"}, {"literal":"e"}, {"literal":"e"}, {"literal":"k"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "time_period_enum", "symbols": ["time_period_enum$string$10"]},
    {"name": "time_period_enum$string$11", "symbols": [{"literal":"d"}, {"literal":"a"}, {"literal":"y"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "time_period_enum", "symbols": ["time_period_enum$string$11"]},
    {"name": "time_period_enum$string$12", "symbols": [{"literal":"h"}, {"literal":"o"}, {"literal":"u"}, {"literal":"r"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "time_period_enum", "symbols": ["time_period_enum$string$12"]},
    {"name": "time_period_enum$string$13", "symbols": [{"literal":"m"}, {"literal":"i"}, {"literal":"n"}, {"literal":"u"}, {"literal":"t"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "time_period_enum", "symbols": ["time_period_enum$string$13"]},
    {"name": "time_period_enum$string$14", "symbols": [{"literal":"s"}, {"literal":"e"}, {"literal":"c"}, {"literal":"o"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "time_period_enum", "symbols": ["time_period_enum$string$14"]},
    {"name": "RuleActionBlock$ebnf$1$subexpression$1$string$1", "symbols": [{"literal":"i"}, {"literal":"f"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RuleActionBlock$ebnf$1$subexpression$1$string$2", "symbols": [{"literal":"t"}, {"literal":"h"}, {"literal":"e"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RuleActionBlock$ebnf$1$subexpression$1$ebnf$1$subexpression$1", "symbols": ["action_block_type", "__"]},
    {"name": "RuleActionBlock$ebnf$1$subexpression$1$ebnf$1", "symbols": ["RuleActionBlock$ebnf$1$subexpression$1$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "RuleActionBlock$ebnf$1$subexpression$1$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "RuleActionBlock$ebnf$1$subexpression$1", "symbols": ["RuleActionBlock$ebnf$1$subexpression$1$string$1", "__", "Expression", "__", "RuleActionBlock$ebnf$1$subexpression$1$string$2", "__", "RuleActionBlock$ebnf$1$subexpression$1$ebnf$1"]},
    {"name": "RuleActionBlock$ebnf$1", "symbols": ["RuleActionBlock$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "RuleActionBlock$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "RuleActionBlock", "symbols": ["RuleActionBlock$ebnf$1", "RuleActions"]},
    {"name": "action_block_type$string$1", "symbols": [{"literal":"c"}, {"literal":"h"}, {"literal":"o"}, {"literal":"o"}, {"literal":"s"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "action_block_type", "symbols": ["action_block_type$string$1"]},
    {"name": "action_block_type$string$2", "symbols": [{"literal":"e"}, {"literal":"v"}, {"literal":"e"}, {"literal":"r"}, {"literal":"y"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "action_block_type", "symbols": ["action_block_type$string$2"]},
    {"name": "RuleActions", "symbols": ["RuleAction"]},
    {"name": "RuleActions", "symbols": ["RuleActions", "__", "RuleAction"]},
    {"name": "RuleAction$ebnf$1$subexpression$1$string$1", "symbols": [{"literal":"="}, {"literal":">"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RuleAction$ebnf$1$subexpression$1", "symbols": ["Identifier", "_", "RuleAction$ebnf$1$subexpression$1$string$1", "_"]},
    {"name": "RuleAction$ebnf$1", "symbols": ["RuleAction$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "RuleAction$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "RuleAction$ebnf$2$subexpression$1$string$1", "symbols": [{"literal":"w"}, {"literal":"i"}, {"literal":"t"}, {"literal":"h"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RuleAction$ebnf$2$subexpression$1", "symbols": ["_", "RuleAction$ebnf$2$subexpression$1$string$1", "__", "declaration_list"]},
    {"name": "RuleAction$ebnf$2", "symbols": ["RuleAction$ebnf$2$subexpression$1"], "postprocess": id},
    {"name": "RuleAction$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "RuleAction", "symbols": ["RuleAction$ebnf$1", "Identifier", "_", {"literal":"("}, "_", "Expression_list", "_", "loc_close_paren", "RuleAction$ebnf$2"]},
    {"name": "RulePostlude$string$1", "symbols": [{"literal":"a"}, {"literal":"l"}, {"literal":"w"}, {"literal":"a"}, {"literal":"y"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RulePostlude", "symbols": ["RulePostlude$string$1", "_", "postlude_clause"]},
    {"name": "RulePostlude$string$2", "symbols": [{"literal":"f"}, {"literal":"i"}, {"literal":"r"}, {"literal":"e"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RulePostlude$ebnf$1$subexpression$1$string$1", "symbols": [{"literal":"e"}, {"literal":"l"}, {"literal":"s"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RulePostlude$ebnf$1$subexpression$1", "symbols": ["_", "RulePostlude$ebnf$1$subexpression$1$string$1", "_", "postlude_clause"]},
    {"name": "RulePostlude$ebnf$1", "symbols": ["RulePostlude$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "RulePostlude$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "RulePostlude$ebnf$2$subexpression$1$string$1", "symbols": [{"literal":"f"}, {"literal":"i"}, {"literal":"n"}, {"literal":"a"}, {"literal":"l"}, {"literal":"l"}, {"literal":"y"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RulePostlude$ebnf$2$subexpression$1", "symbols": ["_", "RulePostlude$ebnf$2$subexpression$1$string$1", "_", "postlude_clause"]},
    {"name": "RulePostlude$ebnf$2", "symbols": ["RulePostlude$ebnf$2$subexpression$1"], "postprocess": id},
    {"name": "RulePostlude$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "RulePostlude", "symbols": ["RulePostlude$string$2", "_", "postlude_clause", "RulePostlude$ebnf$1", "RulePostlude$ebnf$2"]},
    {"name": "postlude_clause", "symbols": [{"literal":"{"}, "_", "Statement_list", "_", "loc_close_curly"]},
    {"name": "Statement", "symbols": ["ExpressionStatement"]},
    {"name": "Statement", "symbols": ["Declaration"]},
    {"name": "ExpressionStatement", "symbols": ["Expression"]},
    {"name": "Declaration", "symbols": ["left_side_of_declaration", "_", {"literal":"="}, "_", "Expression"]},
    {"name": "left_side_of_declaration", "symbols": ["Identifier"]},
    {"name": "Statement_list", "symbols": []},
    {"name": "Statement_list", "symbols": ["Statement"]},
    {"name": "Statement_list", "symbols": ["Statement_list", "_", {"literal":";"}, "_", "Statement"]},
    {"name": "declaration_block", "symbols": [{"literal":"{"}, "_", {"literal":"}"}]},
    {"name": "declaration_block", "symbols": [{"literal":"{"}, "_", "declaration_list", "_", {"literal":"}"}]},
    {"name": "declaration_list", "symbols": ["Declaration"]},
    {"name": "declaration_list", "symbols": ["declaration_list", "__", "Declaration"]},
    {"name": "Expression", "symbols": ["exp_conditional"]},
    {"name": "exp_conditional", "symbols": ["exp_or"]},
    {"name": "exp_conditional$string$1", "symbols": [{"literal":"="}, {"literal":">"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "exp_conditional", "symbols": ["exp_or", "_", "exp_conditional$string$1", "_", "exp_or", "_", {"literal":"|"}, "_", "exp_conditional"]},
    {"name": "exp_or", "symbols": ["exp_and"]},
    {"name": "exp_or$string$1", "symbols": [{"literal":"|"}, {"literal":"|"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "exp_or", "symbols": ["exp_or", "_", "exp_or$string$1", "_", "exp_and"]},
    {"name": "exp_and", "symbols": ["exp_comp"]},
    {"name": "exp_and$string$1", "symbols": [{"literal":"&"}, {"literal":"&"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "exp_and", "symbols": ["exp_and", "_", "exp_and$string$1", "_", "exp_comp"]},
    {"name": "exp_comp", "symbols": ["exp_sum"]},
    {"name": "exp_comp", "symbols": ["exp_comp", "_", {"literal":"<"}, "_", "exp_sum"]},
    {"name": "exp_comp", "symbols": ["exp_comp", "_", {"literal":">"}, "_", "exp_sum"]},
    {"name": "exp_comp$string$1", "symbols": [{"literal":"<"}, {"literal":"="}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "exp_comp", "symbols": ["exp_comp", "_", "exp_comp$string$1", "_", "exp_sum"]},
    {"name": "exp_comp$string$2", "symbols": [{"literal":">"}, {"literal":"="}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "exp_comp", "symbols": ["exp_comp", "_", "exp_comp$string$2", "_", "exp_sum"]},
    {"name": "exp_comp$string$3", "symbols": [{"literal":"="}, {"literal":"="}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "exp_comp", "symbols": ["exp_comp", "_", "exp_comp$string$3", "_", "exp_sum"]},
    {"name": "exp_comp$string$4", "symbols": [{"literal":"!"}, {"literal":"="}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "exp_comp", "symbols": ["exp_comp", "_", "exp_comp$string$4", "_", "exp_sum"]},
    {"name": "exp_comp$string$5", "symbols": [{"literal":"e"}, {"literal":"q"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "exp_comp", "symbols": ["exp_comp", "__", "exp_comp$string$5", "__", "exp_sum"]},
    {"name": "exp_comp$string$6", "symbols": [{"literal":"n"}, {"literal":"e"}, {"literal":"q"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "exp_comp", "symbols": ["exp_comp", "__", "exp_comp$string$6", "__", "exp_sum"]},
    {"name": "exp_comp$string$7", "symbols": [{"literal":"l"}, {"literal":"i"}, {"literal":"k"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "exp_comp", "symbols": ["exp_comp", "__", "exp_comp$string$7", "__", "exp_sum"]},
    {"name": "exp_comp$string$8", "symbols": [{"literal":">"}, {"literal":"<"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "exp_comp", "symbols": ["exp_comp", "_", "exp_comp$string$8", "_", "exp_sum"]},
    {"name": "exp_comp$string$9", "symbols": [{"literal":"<"}, {"literal":"="}, {"literal":">"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "exp_comp", "symbols": ["exp_comp", "_", "exp_comp$string$9", "_", "exp_sum"]},
    {"name": "exp_comp$string$10", "symbols": [{"literal":"c"}, {"literal":"m"}, {"literal":"p"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "exp_comp", "symbols": ["exp_comp", "__", "exp_comp$string$10", "__", "exp_sum"]},
    {"name": "exp_sum", "symbols": ["exp_product"]},
    {"name": "exp_sum", "symbols": ["exp_sum", "_", {"literal":"+"}, "_", "exp_product"]},
    {"name": "exp_sum", "symbols": ["exp_sum", "_", {"literal":"-"}, "_", "exp_product"]},
    {"name": "exp_product", "symbols": ["MemberExpression"]},
    {"name": "exp_product", "symbols": ["exp_product", "_", {"literal":"*"}, "_", "MemberExpression"]},
    {"name": "exp_product", "symbols": ["exp_product", "_", {"literal":"/"}, "_", "MemberExpression"]},
    {"name": "exp_product", "symbols": ["exp_product", "_", {"literal":"%"}, "_", "MemberExpression"]},
    {"name": "MemberExpression", "symbols": ["PrimaryExpression"]},
    {"name": "MemberExpression", "symbols": ["MemberExpression", "_", {"literal":"["}, "_", "Expression", "_", "loc_close_square"]},
    {"name": "MemberExpression", "symbols": ["MemberExpression", "_", {"literal":"{"}, "_", "Expression", "_", "loc_close_curly"]},
    {"name": "MemberExpression", "symbols": ["MemberExpression", "_", {"literal":"."}, "_", "Identifier"]},
    {"name": "PrimaryExpression", "symbols": ["Identifier"]},
    {"name": "PrimaryExpression", "symbols": ["Literal"]},
    {"name": "PrimaryExpression", "symbols": ["Function"]},
    {"name": "PrimaryExpression", "symbols": ["Application"]},
    {"name": "Literal", "symbols": ["String"]},
    {"name": "Literal", "symbols": ["Number"]},
    {"name": "Literal", "symbols": ["Boolean"]},
    {"name": "Literal", "symbols": ["RegExp"]},
    {"name": "Literal", "symbols": ["Chevron"]},
    {"name": "Literal", "symbols": ["Array"]},
    {"name": "Literal", "symbols": ["Map"]},
    {"name": "Expression_list", "symbols": []},
    {"name": "Expression_list", "symbols": ["Expression"]},
    {"name": "Expression_list", "symbols": ["Expression_list", "_", {"literal":","}, "_", "Expression"]},
    {"name": "Function$string$1", "symbols": [{"literal":"f"}, {"literal":"u"}, {"literal":"n"}, {"literal":"c"}, {"literal":"t"}, {"literal":"i"}, {"literal":"o"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Function", "symbols": ["Function$string$1", "_", {"literal":"("}, "_", "function_params", "_", {"literal":")"}, "_", {"literal":"{"}, "_", "Statement_list", "_", "loc_close_curly"]},
    {"name": "function_params", "symbols": []},
    {"name": "function_params", "symbols": ["Identifier"]},
    {"name": "function_params", "symbols": ["function_params", "_", {"literal":","}, "_", "Identifier"]},
    {"name": "Application", "symbols": ["MemberExpression", "_", {"literal":"("}, "_", "Expression_list", "_", "loc_close_paren"]},
    {"name": "Array", "symbols": [{"literal":"["}, "_", "Expression_list", "_", "loc_close_square"]},
    {"name": "Map", "symbols": [{"literal":"{"}, "_", "map_kv_pairs", "_", "loc_close_curly"]},
    {"name": "map_kv_pairs", "symbols": []},
    {"name": "map_kv_pairs", "symbols": ["map_kv_pair"]},
    {"name": "map_kv_pairs", "symbols": ["map_kv_pairs", "_", {"literal":","}, "_", "map_kv_pair"]},
    {"name": "map_kv_pair", "symbols": ["String", "_", {"literal":":"}, "_", "Expression"]},
    {"name": "Identifier$ebnf$1", "symbols": []},
    {"name": "Identifier$ebnf$1", "symbols": [/[a-zA-Z0-9_$]/, "Identifier$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "Identifier", "symbols": [/[a-zA-Z_$]/, "Identifier$ebnf$1"]},
    {"name": "Boolean$string$1", "symbols": [{"literal":"t"}, {"literal":"r"}, {"literal":"u"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Boolean", "symbols": ["Boolean$string$1"]},
    {"name": "Boolean$string$2", "symbols": [{"literal":"f"}, {"literal":"a"}, {"literal":"l"}, {"literal":"s"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Boolean", "symbols": ["Boolean$string$2"]},
    {"name": "PositiveInteger$ebnf$1", "symbols": [/[0-9]/]},
    {"name": "PositiveInteger$ebnf$1", "symbols": [/[0-9]/, "PositiveInteger$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "PositiveInteger", "symbols": ["PositiveInteger$ebnf$1"]},
    {"name": "Number", "symbols": ["number"]},
    {"name": "number", "symbols": ["float"]},
    {"name": "number", "symbols": [{"literal":"+"}, "float"]},
    {"name": "number", "symbols": [{"literal":"-"}, "float"]},
    {"name": "float", "symbols": ["int"]},
    {"name": "float", "symbols": [{"literal":"."}, "int"]},
    {"name": "float", "symbols": ["int", {"literal":"."}, "int"]},
    {"name": "int$ebnf$1", "symbols": [/[0-9]/]},
    {"name": "int$ebnf$1", "symbols": [/[0-9]/, "int$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "int", "symbols": ["int$ebnf$1"]},
    {"name": "RegExp$string$1", "symbols": [{"literal":"r"}, {"literal":"e"}, {"literal":"#"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RegExp", "symbols": ["RegExp$string$1", "regexp_pattern", {"literal":"#"}, "regexp_modifiers"]},
    {"name": "regexp_pattern", "symbols": []},
    {"name": "regexp_pattern", "symbols": ["regexp_pattern", "regexp_pattern_char"]},
    {"name": "regexp_pattern_char", "symbols": [/[^\\#]/]},
    {"name": "regexp_pattern_char", "symbols": [{"literal":"\\"}, /[^]/]},
    {"name": "regexp_modifiers", "symbols": ["regexp_modifiers_chars"]},
    {"name": "regexp_modifiers_chars", "symbols": []},
    {"name": "regexp_modifiers_chars", "symbols": [{"literal":"i"}]},
    {"name": "regexp_modifiers_chars", "symbols": [{"literal":"g"}]},
    {"name": "regexp_modifiers_chars$string$1", "symbols": [{"literal":"i"}, {"literal":"g"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "regexp_modifiers_chars", "symbols": ["regexp_modifiers_chars$string$1"]},
    {"name": "regexp_modifiers_chars$string$2", "symbols": [{"literal":"g"}, {"literal":"i"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "regexp_modifiers_chars", "symbols": ["regexp_modifiers_chars$string$2"]},
    {"name": "Chevron$string$1", "symbols": [{"literal":"<"}, {"literal":"<"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Chevron", "symbols": ["Chevron$string$1", "chevron_body", "loc_close_chevron"]},
    {"name": "chevron_body", "symbols": ["chevron_string_node"]},
    {"name": "chevron_body", "symbols": ["chevron_body", "beesting", "chevron_string_node"]},
    {"name": "beesting$string$1", "symbols": [{"literal":"#"}, {"literal":"{"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "beesting", "symbols": ["beesting$string$1", "_", "Expression", "_", {"literal":"}"}]},
    {"name": "chevron_string_node", "symbols": ["chevron_string"]},
    {"name": "chevron_string", "symbols": []},
    {"name": "chevron_string", "symbols": ["chevron_string", "chevron_char"]},
    {"name": "chevron_char", "symbols": [/[^>#]/]},
    {"name": "chevron_char", "symbols": [{"literal":"#"}, /[^{]/]},
    {"name": "chevron_char", "symbols": [{"literal":">"}, /[^>]/]},
    {"name": "String", "symbols": [{"literal":"\""}, "string", {"literal":"\""}]},
    {"name": "string", "symbols": []},
    {"name": "string", "symbols": ["string", "stringchar"]},
    {"name": "stringchar", "symbols": [/[^\\"]/]},
    {"name": "stringchar", "symbols": [{"literal":"\\"}, /[^]/]},
    {"name": "loc_close_curly", "symbols": [{"literal":"}"}]},
    {"name": "loc_close_square", "symbols": [{"literal":"]"}]},
    {"name": "loc_close_paren", "symbols": [{"literal":")"}]},
    {"name": "loc_close_chevron$string$1", "symbols": [{"literal":">"}, {"literal":">"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "loc_close_chevron", "symbols": ["loc_close_chevron$string$1"]},
    {"name": "_", "symbols": []},
    {"name": "__", "symbols": [{"literal":" "}]},
    {"name": "_semi", "symbols": [{"literal":";"}]},
    {"name": "__semi", "symbols": [{"literal":";"}]}
]
  , ParserStart: "main"
}
if (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {
   module.exports = grammar;
} else {
   window.grammar = grammar;
}
})();
